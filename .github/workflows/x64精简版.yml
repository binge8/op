name: x64精简版

on:
  repository_dispatch:
    types: jx64
  workflow_dispatch:
  schedule:
    - cron: 00 16 * * *

env:
  TOOLCHAIN_TAR: x86
  TOOLCHAIN_SUBTARGET: 64
  CONFIG_FILE: ybin/bin/jx64.config
  CORE: ybin/bin/core
  DIY1_SH: ybin/bin/diy1.sh
  DIY2_SH: ybin/bin/diy2.sh
  FEEDS_CONF: ybin/bin/feeds
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: x64精简版

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: 微信推送
      run: curl -H "Content-Type:application/json" -X POST -d '{"token":"${{ secrets.pushbot }}","title":"${{ env.FILE_NAME }}开始","content":"${{ env.FILE_NAME }}开始编译","template":"json"}' http://www.pushplus.plus/send
    - name: Checkout
      uses: actions/checkout@main
    - name: 搭建编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-get -yqq purge $(curl -fsSL https://raw.githubusercontent.com/binge8/ybin/master/bin/del) || true
        sudo -E apt-get -qq update
        sudo -E apt-get -yqq install $(curl -fsSL https://raw.githubusercontent.com/binge8/ybin/master/bin/get-apt)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
    - name: 拉取源码
      run: |
        df -hT $PWD
        wget -c https://github.com/binge8/op/releases/download/1Toolchain/toolchain-$TOOLCHAIN_TAR-$TOOLCHAIN_SUBTARGET.tar.gz.0
        wget -c https://github.com/binge8/op/releases/download/1Toolchain/toolchain-$TOOLCHAIN_TAR-$TOOLCHAIN_SUBTARGET.tar.gz.1
        cat toolchain-$TOOLCHAIN_TAG-$TOOLCHAIN_SUBTARGET.tar.gz.* | tar -zxv
        git clone https://github.com/binge8/ybin.git
    - name: 更新feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY1_SH
        cd openwrt
        git pull
        $GITHUB_WORKSPACE/$DIY1_SH
    - name: 自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        [ -e $CORE ] && mv $CORE openwrt/package/lean/autocore/files/x86/autocore
        chmod +x $DIY2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY2_SH
        sed -i 's/OpenWrt/Bin AutoBuild ${{ env.DATE1 }} @ OpenWrt/g' package/lean/default-settings/files/zzz-default-settings
    - name: 下载软件包
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: 编译
      run: |
        cd openwrt
        echo -e "$(($(nproc) + 1)) thread compile"
        make -j$(($(nproc) + 1)) || make -j1 V=s
        echo "compile=success" >> $GITHUB_ENV
    - name: Check space usage
      if: (!cancelled())
      run: df -hT
    - name: 整理编译文件
      if: env.compile == 'success'
      run: |
        rm -rf openwrt/bin/targets/x86/64/packages
        cd openwrt/bin/targets/*/*
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "organize=success" >> $GITHUB_ENV
    - name: 发布release
      if: env.UPLOAD_RELEASE == 'true' && env.organize == 'success'
      uses: ncipollo/release-action@main
      with:
        name: ${{ env.DATE }} 🚀 x64精简版 | 自动编译
        allowUpdates: true
        removeArtifacts: true
        tag: 5jx64
        commit: master
        token: ${{ secrets.RELEASES_TOKEN }}
        body: |
          ${{ env.useVersionInfo }}
        artifacts: ${{ env.FIRMWARE }}/*
    - name: 微信推送
      if: always()
      run: |
        if [ "${{ env.organize }}" = "success" ];then
          curl -H "Content-Type:application/json" -X POST -d '{"token":"${{ secrets.pushbot }}","title":"${{ env.FILE_NAME }}成功","content":"${{ env.FILE_NAME }}发布成功","template":"json"}' http://www.pushplus.plus/send
        else
          curl -H "Content-Type:application/json" -X POST -d '{"token":"${{ secrets.pushbot }}","title":"${{ env.FILE_NAME }}失败","content":"${{ env.FILE_NAME }}发布失败","template":"json"}' http://www.pushplus.plus/send
        fi
